üß™ Mode 2 Test Suite - Tue Jun 17 11:07:34 AM +07 2025
üìä Configuration:
   Proxy: true
   Proxy Host: 127.0.0.1:3128
   Container: velocitas-quick-proxy
   Timeout: 120s
   Output: test_results

üìã System Info:
   Docker: Docker version 28.2.2, build e6534b4
   OS: Linux HC-C-0057R 6.5.0-26-generic #26~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue Mar 12 10:22:43 UTC 2 x86_64 x86_64 x86_64 GNU/Linux
   Disk: /dev/mapper/ubuntu--vg-ubuntu--lv  935G  317G  571G  36% /

üîß TEST 1: Container Build
Started: Tue Jun 17 11:07:34 AM +07 2025
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.quick
#1 transferring dockerfile: 4.30kB done
#1 DONE 0.0s

#2 [internal] load metadata for ghcr.io/eclipse-velocitas/devcontainer-base-images/cpp:v0.4
#2 ...

#3 [auth] eclipse-velocitas/devcontainer-base-images/cpp:pull token for ghcr.io
#3 DONE 0.0s

#2 [internal] load metadata for ghcr.io/eclipse-velocitas/devcontainer-base-images/cpp:v0.4
#2 DONE 2.0s

#4 [internal] load .dockerignore
#4 transferring context: 126B done
#4 DONE 0.0s

#5 [ 1/19] FROM ghcr.io/eclipse-velocitas/devcontainer-base-images/cpp:v0.4@sha256:07b710143fc78143e744c932d2acb48ab71a8ae59ef95fcb1d20e4db59bf6a7c
#5 DONE 0.0s

#6 [internal] load build context
#6 transferring context: 622B done
#6 DONE 0.0s

#7 [ 8/19] COPY --chown=vscode:vscode templates/AppManifest.json /quickbuild/app/AppManifest.json
#7 CACHED

#8 [ 4/19] RUN echo vscode ALL=(root) NOPASSWD:ALL > /etc/sudoers.d/vscode     && chmod 0440 /etc/sudoers.d/vscode
#8 CACHED

#9 [ 6/19] RUN python3 -m pip install --user --upgrade pip &&     python3 -m pip install --user -r /tmp/requirements.txt
#9 CACHED

#10 [14/19] RUN sudo chown -R vscode:vscode /quickbuild &&     pip install --user -r /tmp/requirements.txt &&     export PATH="$HOME/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" &&     velocitas init -f -v
#10 CACHED

#11 [ 5/19] COPY requirements.txt /tmp/requirements.txt
#11 CACHED

#12 [12/19] COPY --chown=vscode:vscode templates/app/src/VehicleApp.template.cpp /quickbuild/app/src/VehicleApp.cpp
#12 CACHED

#13 [17/19] COPY --chown=vscode:vscode scripts/ /scripts/
#13 CACHED

#14 [16/19] RUN export PATH="$HOME/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" &&     velocitas exec vehicle-signal-interface download-vspec &&     velocitas exec vehicle-signal-interface generate-model
#14 CACHED

#15 [15/19] RUN export PATH="$HOME/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" &&     velocitas exec build-system install
#15 CACHED

#16 [13/19] COPY --chown=vscode:vscode .velocitas.json /quickbuild/.velocitas.json
#16 CACHED

#17 [ 2/19] RUN groupadd --gid 1000 vscode || true &&     useradd --uid 1000 --gid 1000 -m vscode || true
#17 CACHED

#18 [ 3/19] RUN apt-get update && apt-get install -y     curl     wget     git     sudo     build-essential     cmake     ninja-build     ccache     pkg-config     python3     python3-pip     netcat-openbsd     jq     && rm -rf /var/lib/apt/lists/*
#18 CACHED

#19 [11/19] COPY --chown=vscode:vscode templates/app/ /quickbuild/app/
#19 CACHED

#20 [ 7/19] WORKDIR /quickbuild
#20 CACHED

#21 [ 9/19] COPY --chown=vscode:vscode templates/conanfile.txt /quickbuild/conanfile.txt
#21 CACHED

#22 [10/19] COPY --chown=vscode:vscode templates/CMakeLists.txt /quickbuild/CMakeLists.txt
#22 CACHED

#23 [18/19] RUN chmod +x /scripts/*.sh
#23 CACHED

#24 [19/19] RUN echo '#!/bin/bash\nexport PATH="$HOME/.local/bin:$PATH"\n/scripts/quick-build.sh "$@"' > /usr/local/bin/build &&     echo '#!/bin/bash\nexport PATH="$HOME/.local/bin:$PATH"\n/scripts/quick-run.sh "$@"' > /usr/local/bin/run &&     echo '#!/bin/bash\nexport PATH="$HOME/.local/bin:$PATH"\n/scripts/validate-template.sh "$@"' > /usr/local/bin/validate &&     chmod +x /usr/local/bin/build /usr/local/bin/run /usr/local/bin/validate
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:0865e9a67fc1fe9e16a069045dfb11bbe8bdf4af4dcbea6320835361e5347014 done
#25 naming to docker.io/library/velocitas-quick-proxy done
#25 DONE 0.0s

 [33m1 warning found (use docker --debug to expand):
[0m - SecretsUsedInArgOrEnv: Do not use ARG or ENV instructions for sensitive data (ENV "GITHUB_API_TOKEN") (line 19)
Completed: Tue Jun 17 11:07:36 AM +07 2025
Exit Code: 0
Duration: 2s

‚úÖ TEST 1 PASSED: Container Build
üîß TEST 2: Help Command
Started: Tue Jun 17 11:07:36 AM +07 2025
‚ÑπÔ∏è  [INFO] Workspace: /quickbuild
Quick Build Script - Mode 2 Blackbox Utility

Usage:
  cat VehicleApp.cpp | docker run -i velocitas-quick
  docker run -v $(pwd)/app.cpp:/input velocitas-quick
  docker run -v $(pwd):/input velocitas-quick

Custom VSS Support:
  # Use custom VSS file
  docker run -v $(pwd)/my-vss.json:/vss.json -e VSS_SPEC_FILE=/vss.json -i velocitas-quick

  # Use custom VSS URL
  docker run -e VSS_SPEC_URL=https://company.com/vss.json -i velocitas-quick

Commands:
  build     - Build the application (default)
  validate  - Only validate VehicleApp.cpp
  help      - Show this help message

Environment Variables:
  VSS_SPEC_FILE - Path to custom VSS JSON file
  VSS_SPEC_URL  - URL to custom VSS JSON specification
Completed: Tue Jun 17 11:07:37 AM +07 2025
Exit Code: 0
Duration: 1s

‚úÖ TEST 2 PASSED: Help Command
üîß TEST 3: Basic Build via Stdin
Started: Tue Jun 17 11:07:37 AM +07 2025
‚ÑπÔ∏è  [INFO] Workspace: /quickbuild
‚ÑπÔ∏è  [INFO] Quick Build Mode 2 - Blackbox Utility
‚ÑπÔ∏è  [INFO] Reading user VehicleApp.cpp...
‚ÑπÔ∏è  [INFO] Reading from stdin...
‚úÖ [SUCCESS] VehicleApp.cpp validation passed
‚úÖ [SUCCESS] VehicleApp.cpp loaded successfully (264 lines)
‚ÑπÔ∏è  [INFO] Preparing build workspace...
‚ÑπÔ∏è  [INFO] Configuring VSS specification...
‚ÑπÔ∏è  [INFO] Using default VSS 4.0 specification
‚úÖ [SUCCESS] Workspace prepared
‚ÑπÔ∏è  [INFO] Generating vehicle model from VSS...
‚úÖ [SUCCESS] Vehicle model generated
‚ÑπÔ∏è  [INFO] Building C++ application...
‚úÖ [SUCCESS] Build completed successfully (executable size: 14M)
‚ÑπÔ∏è  [INFO] Build Summary:
============================================
‚úÖ VehicleApp.cpp: Validated and compiled
‚úÖ Dependencies: Pre-installed (cached)
‚úÖ Vehicle Model: Generated from VSS
‚úÖ Executable: /quickbuild/build/bin/app
üìä Size: 13.3MiB
üïê Completed: Tue Jun 17 04:08:04 UTC 2025
============================================
‚úÖ [SUCCESS] Quick build completed successfully!
Completed: Tue Jun 17 11:08:05 AM +07 2025
Exit Code: 0
Duration: 28s

‚úÖ TEST 3 PASSED: Basic Build via Stdin
üîß TEST 4: Validation Command
Started: Tue Jun 17 11:08:05 AM +07 2025
‚ÑπÔ∏è  [INFO] Workspace: /quickbuild
‚ÑπÔ∏è  [INFO] Reading user VehicleApp.cpp...
‚ÑπÔ∏è  [INFO] Reading from stdin...
‚úÖ [SUCCESS] VehicleApp.cpp validation passed
‚úÖ [SUCCESS] VehicleApp.cpp loaded successfully (264 lines)
‚úÖ [SUCCESS] Validation completed - VehicleApp.cpp is valid
Completed: Tue Jun 17 11:08:05 AM +07 2025
Exit Code: 0
Duration: 0s

‚úÖ TEST 4 PASSED: Validation Command
üîß TEST 5: Custom VSS Support
Started: Tue Jun 17 11:08:05 AM +07 2025
‚ÑπÔ∏è  [INFO] Workspace: /quickbuild
‚ÑπÔ∏è  [INFO] Quick Build Mode 2 - Blackbox Utility
‚ÑπÔ∏è  [INFO] Reading user VehicleApp.cpp...
‚ÑπÔ∏è  [INFO] Reading from stdin...
‚úÖ [SUCCESS] VehicleApp.cpp validation passed
‚úÖ [SUCCESS] VehicleApp.cpp loaded successfully (264 lines)
‚ÑπÔ∏è  [INFO] Preparing build workspace...
‚ÑπÔ∏è  [INFO] Configuring VSS specification...
‚ÑπÔ∏è  [INFO] Using custom VSS URL: https://raw.githubusercontent.com/COVESA/vehicle_signal_specification/main/spec/VehicleSignalSpecification.json
‚úÖ [SUCCESS] VSS configuration updated
‚ÑπÔ∏è  [INFO] VSS source: https://raw.githubusercontent.com/COVESA/vehicle_signal_specification/main/spec/VehicleSignalSpecification.json
‚úÖ [SUCCESS] Workspace prepared
‚ÑπÔ∏è  [INFO] Generating vehicle model from VSS...
‚úÖ [SUCCESS] Vehicle model generated
‚ÑπÔ∏è  [INFO] Building C++ application...
‚úÖ [SUCCESS] Build completed successfully (executable size: 14M)
‚ÑπÔ∏è  [INFO] Build Summary:
============================================
‚úÖ VehicleApp.cpp: Validated and compiled
‚úÖ Dependencies: Pre-installed (cached)
‚úÖ Vehicle Model: Generated from VSS
‚úÖ Executable: /quickbuild/build/bin/app
üìä Size: 13.3MiB
üïê Completed: Tue Jun 17 04:08:33 UTC 2025
============================================
‚úÖ [SUCCESS] Quick build completed successfully!
Completed: Tue Jun 17 11:08:33 AM +07 2025
Exit Code: 0
Duration: 28s

‚úÖ TEST 5 PASSED: Custom VSS Support
üîß TEST 6: Error Handling
Started: Tue Jun 17 11:08:33 AM +07 2025
‚ÑπÔ∏è  [INFO] Workspace: /quickbuild
‚ÑπÔ∏è  [INFO] Quick Build Mode 2 - Blackbox Utility
‚ÑπÔ∏è  [INFO] Reading user VehicleApp.cpp...
‚ÑπÔ∏è  [INFO] Reading from stdin...
‚ùå [ERROR] Invalid VehicleApp.cpp: Missing VehicleApp class definition
Completed: Tue Jun 17 11:08:34 AM +07 2025
Exit Code: 0
Duration: 1s

‚úÖ TEST 6 PASSED: Error Handling
üîß TEST 7: File Mount Input
Started: Tue Jun 17 11:08:34 AM +07 2025
‚ÑπÔ∏è  [INFO] Workspace: /quickbuild
‚ÑπÔ∏è  [INFO] Quick Build Mode 2 - Blackbox Utility
‚ÑπÔ∏è  [INFO] Reading user VehicleApp.cpp...
‚ÑπÔ∏è  [INFO] Reading from mounted file: /input
‚úÖ [SUCCESS] VehicleApp.cpp validation passed
‚úÖ [SUCCESS] VehicleApp.cpp loaded successfully (264 lines)
‚ÑπÔ∏è  [INFO] Preparing build workspace...
‚ÑπÔ∏è  [INFO] Configuring VSS specification...
‚ÑπÔ∏è  [INFO] Using default VSS 4.0 specification
‚úÖ [SUCCESS] Workspace prepared
‚ÑπÔ∏è  [INFO] Generating vehicle model from VSS...
‚úÖ [SUCCESS] Vehicle model generated
‚ÑπÔ∏è  [INFO] Building C++ application...
‚úÖ [SUCCESS] Build completed successfully (executable size: 14M)
‚ÑπÔ∏è  [INFO] Build Summary:
============================================
‚úÖ VehicleApp.cpp: Validated and compiled
‚úÖ Dependencies: Pre-installed (cached)
‚úÖ Vehicle Model: Generated from VSS
‚úÖ Executable: /quickbuild/build/bin/app
üìä Size: 13.3MiB
üïê Completed: Tue Jun 17 04:09:00 UTC 2025
============================================
‚úÖ [SUCCESS] Quick build completed successfully!
Completed: Tue Jun 17 11:09:01 AM +07 2025
Exit Code: 0
Duration: 27s

‚úÖ TEST 7 PASSED: File Mount Input
üîß TEST 8: Directory Mount Input
Started: Tue Jun 17 11:09:01 AM +07 2025
‚ÑπÔ∏è  [INFO] Workspace: /quickbuild
‚ÑπÔ∏è  [INFO] Quick Build Mode 2 - Blackbox Utility
‚ÑπÔ∏è  [INFO] Reading user VehicleApp.cpp...
‚ùå [ERROR] No input provided. Use stdin or mount file at /input

Usage examples:
  cat VehicleApp.cpp | docker run -i velocitas-quick
  docker run -v $(pwd)/VehicleApp.cpp:/input velocitas-quick
  docker run -v $(pwd):/input velocitas-quick
Completed: Tue Jun 17 11:09:01 AM +07 2025
Exit Code: 1
Duration: 0s

‚ùå TEST 8 FAILED: Directory Mount Input

üìä TEST SUMMARY
============================================
Total Tests: 8
Passed: 7
Failed: 1
Success Rate: 87%
Completed: Tue Jun 17 11:09:01 AM +07 2025
