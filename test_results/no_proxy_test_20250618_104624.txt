🧪 Mode 2 Test Suite - Wed Jun 18 10:46:24 AM +07 2025
📊 Configuration:
   Proxy: false
   Verbose: true
   Container: velocitas-quick
   Timeout: 120s
   Output: test_results

📋 System Info:
   Docker: Docker version 28.2.2, build e6534b4
   OS: Linux HC-C-0057R 6.5.0-26-generic #26~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue Mar 12 10:22:43 UTC 2 x86_64 x86_64 x86_64 GNU/Linux
   Disk: /dev/mapper/ubuntu--vg-ubuntu--lv  935G  321G  567G  37% /

🔧 TEST 1: Container Build
Started: Wed Jun 18 10:46:24 AM +07 2025
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.quick
#1 transferring dockerfile: 4.97kB done
#1 DONE 0.0s

#2 [auth] eclipse-velocitas/devcontainer-base-images/cpp:pull token for ghcr.io
#2 DONE 0.0s

#3 [internal] load metadata for ghcr.io/eclipse-velocitas/devcontainer-base-images/cpp:v0.4
#3 ERROR: failed to authorize: DeadlineExceeded: failed to fetch oauth token: Post "https://ghcr.io/token": context deadline exceeded
------
 > [internal] load metadata for ghcr.io/eclipse-velocitas/devcontainer-base-images/cpp:v0.4:
------
Dockerfile.quick:10
--------------------
   8 |     # ============================================================================
   9 |     
  10 | >>> FROM ghcr.io/eclipse-velocitas/devcontainer-base-images/cpp:v0.4
  11 |     
  12 |     # Container metadata
--------------------
ERROR: failed to solve: DeadlineExceeded: DeadlineExceeded: failed to fetch oauth token: Post "https://ghcr.io/token": context deadline exceeded
Completed: Wed Jun 18 10:47:24 AM +07 2025
Exit Code: 0
Duration: 60s

✅ TEST 1 PASSED: Container Build
🔧 TEST 2: Help Command
Started: Wed Jun 18 10:47:29 AM +07 2025
ℹ️  [INFO] Workspace: /quickbuild
Quick Build Script - Mode 2 Blackbox Utility

Usage:
  cat VehicleApp.cpp | docker run -i velocitas-quick
  docker run -v $(pwd)/app.cpp:/input velocitas-quick
  docker run -v $(pwd):/input velocitas-quick

Custom VSS Support:
  # Use custom VSS file
  docker run -v $(pwd)/my-vss.json:/vss.json -e VSS_SPEC_FILE=/vss.json -i velocitas-quick

  # Use custom VSS URL
  docker run -e VSS_SPEC_URL=https://company.com/vss.json -i velocitas-quick

Commands:
  build     - Build the application (default)
  run       - Build (if needed) and run application with live output
  validate  - Only validate VehicleApp.cpp
  help      - Show this help message

Environment Variables:
  VSS_SPEC_FILE - Path to custom VSS JSON file
  VSS_SPEC_URL  - URL to custom VSS JSON specification
Completed: Wed Jun 18 10:47:29 AM +07 2025
Exit Code: 0
Duration: 0s

✅ TEST 2 PASSED: Help Command
🔧 TEST 3: Basic Build via Stdin
Started: Wed Jun 18 10:47:35 AM +07 2025
ℹ️  [INFO] Workspace: /quickbuild

ℹ️  [INFO] 🚀 Velocitas C++ Quick Build Utility
ℹ️  [INFO] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ℹ️  [INFO] 📦 Zero-setup containerized build for Velocitas vehicle apps

ℹ️  [INFO] 🔧 STEP 1/5: Processing input...
ℹ️  [INFO] Reading user VehicleApp.cpp...
ℹ️  [INFO] Reading from stdin...
✅ [SUCCESS] VehicleApp.cpp validation passed
✅ [SUCCESS] VehicleApp.cpp loaded successfully (454 lines)

ℹ️  [INFO] 🔧 STEP 2/5: Preparing build workspace...
ℹ️  [INFO] Preparing build workspace...
ℹ️  [INFO] Configuring VSS specification...
ℹ️  [INFO] Using default VSS 4.0 specification
✅ [SUCCESS] Workspace prepared

ℹ️  [INFO] 🔧 STEP 3/5: Vehicle signal model preparation...
ℹ️  [INFO] Generating vehicle model from VSS...
✅ [SUCCESS] Vehicle model generated

ℹ️  [INFO] 🔧 STEP 4/5: Building C++ application...
ℹ️  [INFO] Building C++ application...
ℹ️  [INFO] 🔧 Configuring build environment...
ℹ️  [INFO] 📦 Installing dependencies (if needed)...
